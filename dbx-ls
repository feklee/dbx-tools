#!/bin/bash

source "`dirname $0`/init.sh"

OPTIONS[l]="detailed listing"
OPTIONS[R]="recursive listing"

NON_OPTION_ARGS="[PATH]"

DESCRIPTION=$(cat <<EOF
List information about the current Dropbox directory, or if
specified, about PATH.
EOF
	   )

parse-options "$@"
shift $((OPTIND-1))

REQUESTED_PATH=$1
DBX_PATH=`dbx-path "$1"`

function relative-path-from-match {
    MATCH=$1
    ISDIR=$2
    P="${LINE##$MATCH}"
    if test "${P,,}" == "${DBX_PATH,,}"; then
	# Path is the one that was requested
	test "$ISDIR" = yes && echo . || echo "$REQUESTED_PATH"
	exit
    fi
    if test "$DBX_PATH" != /; then
	C=${#DBX_PATH}
	P="${P:$C}"
    fi
    P="${P:1}"
    test "$P" = / && P=""
    echo $P
}

function print-path-line {
    LINE="$1"
    MATCH="$2"
    ISDIR=$3
    RELPATH=`relative-path-from-match "$MATCH" $ISDIR`
    test -v LONG && echo -n "$MATCH"
    echo -n "$RELPATH"
    test "$RELPATH" != . && test "$ISDIR" = yes && test ! -v LONG && \
	echo -n /
    echo
}

shopt -s nocasematch

test-option-enabled l && LONG=yes
test-option-enabled R && O=-R

dbxcli ls -l $O "$DBX_PATH" | \
    while read LINE; do
	if [[ $LINE =~ ^Revision ]]; then
	    # Heading
	    test -v LONG && echo "$LINE"
	elif [[ $LINE =~ ^-[[:blank:]]+-[[:blank:]]+-[[:blank:]]+ ]];
	then
	    # Directory
	    print-path-line "$LINE" "${BASH_REMATCH[0]}" yes
	elif [[ $LINE =~ ^[^/]+ ]]; then
	    # Regular file
	    print-path-line "$LINE" "${BASH_REMATCH[0]}"
	fi
    done
