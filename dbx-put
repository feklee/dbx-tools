#!/bin/bash

source "`dirname $0`/init.sh"

set -o pipefail

function test-skip-file {
    test-option-enabled a && return 1 
    test-hash-exists
}

START_PWD="$PWD"

OPTIONS[a]="download all, i.e. never skip previously downloaded files"
NON_OPTION_ARGS="PATH"
DESCRIPTION=$(cat <<EOF
Upload PATH to the Dropbox. If PATH is a directory, upload its
contents recursively.

By comparing hashes, only files that have changed are uploaded. If a
file's meta data has changed, such as its name, it will be uploaded as
well.
EOF
           )
parse-options "$@"
shift $((OPTIND-1))
P="$1"
shift && test -n "$P" || exit-on-missing-args

ABSOLUTE_LOCAL_PATH=`realpath -m "$P"`

test-in-dbx-home "$ABSOLUTE_LOCAL_PATH" || \
    exit-on-error "Path not in \$DBX_HOME"

DBX_PATH=${ABSOLUTE_LOCAL_PATH##$DBX_HOME/}

cd "$DBX_HOME"
find -L "$DBX_PATH" -type f | \
    while read DBX_FILE; do
        ABS_LOCAL_FILE=`local-path "$DBX_FILE"`
        LOCAL_FILE="${ABS_LOCAL_FILE##$START_PWD/}"
        compute-hash "$ABS_LOCAL_FILE"
        if test-skip-file; then
            echo "Skipping previously uploaded $LOCAL_FILE"
        else
            dbxcli put "$DBX_FILE" "$DBX_FILE" || \
                exit-on-error "Failure uploading $LOCAL_FILE"
            echo "Success uploading $LOCAL_FILE"
            store-hash
        fi
    done
